[{"/home/pratik/kamalakar/survey-tiger/src/index.js":"1","/home/pratik/kamalakar/survey-tiger/src/App.js":"2","/home/pratik/kamalakar/survey-tiger/src/reportWebVitals.js":"3","/home/pratik/kamalakar/survey-tiger/src/Components/CreateSurvey.js":"4","/home/pratik/kamalakar/survey-tiger/src/Components/SingleSelect.js":"5","/home/pratik/kamalakar/survey-tiger/src/Components/MultiSelect.js":"6","/home/pratik/kamalakar/survey-tiger/src/Store/global-store.js":"7","/home/pratik/kamalakar/survey-tiger/src/Store/responseSlice.js":"8","/home/pratik/kamalakar/survey-tiger/src/Store/surveySlice.js":"9","/home/pratik/kamalakar/survey-tiger/src/Components/TakeSurvey.js":"10"},{"size":846,"mtime":1610021009759,"results":"11","hashOfConfig":"12"},{"size":1507,"mtime":1610022272298,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1609573169966,"results":"14","hashOfConfig":"12"},{"size":1683,"mtime":1610023553703,"results":"15","hashOfConfig":"12"},{"size":1903,"mtime":1609772490677,"results":"16","hashOfConfig":"12"},{"size":2189,"mtime":1609771664100,"results":"17","hashOfConfig":"12"},{"size":318,"mtime":1609934200436,"results":"18","hashOfConfig":"12"},{"size":0,"mtime":1609853059617,"results":"19","hashOfConfig":"12"},{"size":896,"mtime":1610020450083,"results":"20","hashOfConfig":"12"},{"size":438,"mtime":1610023446227,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"zjbm3n",{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"25"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"25"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"25"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/pratik/kamalakar/survey-tiger/src/index.js",["47","48","49","50"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport {store} from './Store/global-store';\nimport { BrowserRouter, Link, Switch, Route ,useHistory} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}> \n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["51","52"],"/home/pratik/kamalakar/survey-tiger/src/App.js",["53","54","55","56"],"/home/pratik/kamalakar/survey-tiger/src/reportWebVitals.js",[],"/home/pratik/kamalakar/survey-tiger/src/Components/CreateSurvey.js",["57","58"],"/home/pratik/kamalakar/survey-tiger/src/Components/SingleSelect.js",[],"/home/pratik/kamalakar/survey-tiger/src/Components/MultiSelect.js",["59","60","61"],"import {\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    Input,\n    Button,\n  } from \"reactstrap\";\n  import {useState} from 'react';\nconst MultipleSelect=()=>{\n\n    const [options,setOptions]=useState([\"\"]);\n    const [question,setQuestion]=useState(\"\");\n    \n    const addOptions=(optionIndex)=>{\n        if(options.length<4)\n        {\n            options.splice(optionIndex+1,0,\"\");\n            setOptions([...options]);\n        \n        }\n    }\n    const removeOptions=(optionIndex)=>{\n        let tempOptions=options;\n        tempOptions.splice(optionIndex,1);\n        setOptions([...tempOptions]);\n    }\n    const setOptionArray=(value,optionIndex)=>{\n        options[optionIndex]=value;\n        setOptions([...options]);\n    }\n\n    const shouldQuestionAddandPublishDisabled=()=>{\n        return question.trim()===\"\"||options.find(opt=>opt.trim()===\"\")!==undefined;\n    }\n    return (\n        <div className=\"question-container\">\n      <InputGroup className=\"input-grp\">\n        <InputGroupAddon addonType=\"prepend\">\n          <InputGroupText>?</InputGroupText>\n        </InputGroupAddon>\n        <Input placeholder=\"Your Question\"  value={question} onChange={(e)=>setQuestion(e.target.value)}/>\n      </InputGroup>\n      <p className=\"option-text\">Options</p>\n\n      { options.map((option,optionIndex)=>(\n        <InputGroup className=\"input-grp\" key={optionIndex}>\n        <Input placeholder={`Option ${optionIndex+1}`} value={option} onChange={(e)=>setOptionArray(e.target.value,optionIndex)}/>\n        <InputGroupAddon addonType=\"append\">\n          <Button onClick={()=>addOptions(optionIndex)} disabled={options.length==4}>+</Button>\n          <Button onClick={()=>{removeOptions(optionIndex)}} disabled={options.length==1}>-</Button>\n        </InputGroupAddon>\n      </InputGroup>\n          ))\n}\n{\n    options.length==4?\n\n      <div className=\"question-buttons\">\n        <Button className=\"survey-main-btn\" disabled={shouldQuestionAddandPublishDisabled()}>Add Question</Button>\n        <Button className=\"survey-main-btn\" disabled={shouldQuestionAddandPublishDisabled()}>Publish</Button>\n      </div>\n      :null\n}\n    </div>\n    );\n}\nexport default MultipleSelect;","/home/pratik/kamalakar/survey-tiger/src/Store/global-store.js",["62"],"import {configureStore,createSlice,combineReducers} from '@reduxjs/toolkit'\nimport {surveySlice} from './surveySlice';\nimport responseSlice from './responseSlice'\nconst rootReducer=combineReducers({surveys:surveySlice.reducer,responses:responseSlice.reducer});\nexport const store=configureStore({reducer:rootReducer});","/home/pratik/kamalakar/survey-tiger/src/Store/responseSlice.js",[],"/home/pratik/kamalakar/survey-tiger/src/Store/surveySlice.js",["63"],"import {createSlice,configureStore,createAsyncThunk} from '@reduxjs/toolkit';\n\nexport const createSurvey=createAsyncThunk(\n    'surveys/createSurvey',\n    async(_,thunkAPI)=>{\n        console.log(thunkAPI.getState());\n        const newSurveyId=thunkAPI.getState().surveys.length+1;\n        return newSurveyId;\n    }\n)\n  export const surveySlice=createSlice({\n    name:\"surveys\",\n    initialState:[],\n    reducers:{\n        /*createSurvey:(state,action)=>{\n            const newSurveyId=state.length+1;\n            state.push({questions:[],surveyId:newSurveyId,isPublished:false})\n            return state;*/\n        },\n\n        extraReducers:{\n            [createSurvey.fulfilled]:(state,action)=>{\n                state.push({questions:[],surveyId:action.payload,isPublished:false})\n                console.log(state);\n                console.log(action);\n            }\n        }\n          \n\n})\n","/home/pratik/kamalakar/survey-tiger/src/Components/TakeSurvey.js",["64","65"],{"ruleId":"66","severity":1,"message":"67","line":7,"column":25,"nodeType":"68","messageId":"69","endLine":7,"endColumn":29},{"ruleId":"66","severity":1,"message":"70","line":7,"column":31,"nodeType":"68","messageId":"69","endLine":7,"endColumn":37},{"ruleId":"66","severity":1,"message":"71","line":7,"column":39,"nodeType":"68","messageId":"69","endLine":7,"endColumn":44},{"ruleId":"66","severity":1,"message":"72","line":7,"column":46,"nodeType":"68","messageId":"69","endLine":7,"endColumn":56},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"66","severity":1,"message":"77","line":1,"column":10,"nodeType":"68","messageId":"69","endLine":1,"endColumn":23},{"ruleId":"66","severity":1,"message":"78","line":6,"column":9,"nodeType":"68","messageId":"69","endLine":6,"endColumn":17},{"ruleId":"66","severity":1,"message":"79","line":7,"column":9,"nodeType":"68","messageId":"69","endLine":7,"endColumn":14},{"ruleId":"66","severity":1,"message":"80","line":8,"column":9,"nodeType":"68","messageId":"69","endLine":8,"endColumn":20},{"ruleId":"66","severity":1,"message":"80","line":11,"column":9,"nodeType":"68","messageId":"69","endLine":11,"endColumn":20},{"ruleId":"66","severity":1,"message":"81","line":17,"column":9,"nodeType":"68","messageId":"69","endLine":17,"endColumn":18},{"ruleId":"82","severity":1,"message":"83","line":49,"column":81,"nodeType":"84","messageId":"85","endLine":49,"endColumn":83},{"ruleId":"82","severity":1,"message":"83","line":50,"column":86,"nodeType":"84","messageId":"85","endLine":50,"endColumn":88},{"ruleId":"82","severity":1,"message":"83","line":56,"column":19,"nodeType":"84","messageId":"85","endLine":56,"endColumn":21},{"ruleId":"66","severity":1,"message":"86","line":1,"column":24,"nodeType":"68","messageId":"69","endLine":1,"endColumn":35},{"ruleId":"66","severity":1,"message":"87","line":1,"column":21,"nodeType":"68","messageId":"69","endLine":1,"endColumn":35},{"ruleId":"66","severity":1,"message":"88","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":23},{"ruleId":"66","severity":1,"message":"89","line":1,"column":25,"nodeType":"68","messageId":"69","endLine":1,"endColumn":33},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'useHistory' is defined but never used.","no-native-reassign",["90"],"no-negated-in-lhs",["91"],"'BrowserRouter' is defined but never used.","'Provider' is defined but never used.","'store' is defined but never used.","'surveySlice' is defined but never used.","'selectRef' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'createSlice' is defined but never used.","'configureStore' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]